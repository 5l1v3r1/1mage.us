package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _assets_ds_store = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\x4f\x6f\xd3\x30\x14\xc0\x9f\xb3\x8c\xb9\xdb\xc5\x08\x90\x40\x5c\x7c\x45\xea\x21\x93\x3a\x8d\xdd\x42\x19\xe2\x04\xaa\x28\xda\x84\x18\x2a\xf1\x12\xa9\x96\x42\x52\xc5\x2e\xd5\x54\x55\xca\x99\x8f\xc1\xff\x8f\xc1\x01\xc1\x67\xe0\xab\x70\x22\x6e\xde\xa6\x40\xc6\x81\x53\x27\xf6\x7e\x51\xf4\x73\x6d\x3f\x37\x71\x24\xdb\x0f\x00\x58\x7f\x1a\x6f\x03\x88\xaa\xc8\xa1\xb6\xd7\x81\x73\xe1\x78\xb7\xf0\xd0\xbe\x1b\x6f\x39\xc6\x04\x2c\x98\x87\x4f\x06\xc1\xd4\x9c\x3f\x16\x71\xc1\x70\xdf\x6e\x03\x0c\x1c\x43\x01\xba\xf9\xfd\x6c\xb1\x6c\x7d\x0c\x11\xbc\x82\xa4\xdd\x4b\xcd\xcc\x44\xa5\xb9\xaa\x5a\x7e\xaa\x49\xaa\x8d\x0d\x82\x1f\xcc\x5b\xf3\xd7\xaf\x6c\xf0\xce\xe6\x96\xbb\xc4\xd5\xcd\x17\xc3\x71\x3e\x1b\xda\xc8\x4e\x4d\x3f\x2a\x9e\x2f\x7f\xe9\x38\x51\x58\x1e\x44\x76\x7c\x5a\x7e\x9a\xe7\xe9\x59\x39\x52\x07\x3a\x99\x8d\xc4\xf5\xfb\x79\x66\x23\x9d\x25\x45\x23\xf4\xe8\x50\x67\x71\x3e\xeb\xe7\xd3\x2c\x36\x47\x58\x79\xa8\x63\x3b\x1e\x89\x1b\x83\x22\x79\x5d\x85\x0e\xa2\x2c\x39\xd0\x46\x2b\x9d\x6a\x7b\xc2\x3b\xee\x1a\x89\x5b\xf3\xf9\x76\xd0\xdb\xe9\xca\xbd\xde\xdd\x45\x57\xce\x77\x77\x83\xae\xec\xf5\xf6\x16\x0b\xf1\x85\xf3\xdb\x77\x76\xee\x3d\x7a\x36\x59\xbc\x79\xfb\xee\xfd\x87\x8f\x9f\x3e\x7f\xfd\x56\x4f\x12\x63\x38\x5b\xd7\xfe\x98\xbd\xef\xed\x79\x89\xcd\x71\xaa\xaa\x37\x71\x21\xeb\x55\x93\x85\x13\x48\x21\x69\x56\x13\x04\x41\xac\x1a\x5c\x8b\xf8\xd6\x6a\x1f\x83\x20\x88\x0b\x88\x5b\x1f\x24\x3a\x44\x97\xb5\x19\xb6\x7b\x68\xbf\x11\x23\xd0\x12\x1d\xa2\xcb\xda\x0c\xfb\x79\x68\x1f\xcd\xd1\x02\x2d\xd1\x21\xba\xac\x8d\x8b\x16\xc3\xe4\x83\xe1\x3f\x33\xcc\x50\x98\x40\x4b\x74\xf8\x8f\x2f\x4d\x10\x97\x84\xb5\x5a\xc2\xed\xff\x0f\xfe\x9e\xff\x13\x04\xf1\x1f\xc3\xfc\xfd\xe1\x7e\x1f\xce\x12\x82\x16\x6e\xaf\x95\xd5\xfd\xf2\x34\x00\x7e\x3f\x08\x60\x9d\x8f\x7d\xdd\x56\x7c\xb3\x51\x2f\xd1\x21\xba\xac\x4d\x07\x01\x82\x58\x15\xbf\x02\x00\x00\xff\xff\xa3\xc5\xfa\xc9\x04\x18\x00\x00")

func assets_ds_store_bytes() ([]byte, error) {
	return bindata_read(
		_assets_ds_store,
		"assets/.DS_Store",
	)
}

func assets_ds_store() (*asset, error) {
	bytes, err := assets_ds_store_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1441221573, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_images_lock_svg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x54\xdb\x6a\xdb\x40\x10\x7d\x76\x20\xff\xb0\x55\x9f\x0a\xda\xd1\x5e\xb4\x37\x35\x6e\x68\x42\x49\x02\x0d\x14\x0a\x7e\x2d\xb2\xbc\xb5\x45\x54\x49\x48\xb2\xec\xe4\xeb\x3b\xba\xd1\x50\xf2\x03\x79\xd9\xd1\xd9\x99\x33\xe7\xcc\xee\xa2\xab\xeb\xf3\x9f\x82\xf4\xbe\x69\xf3\xaa\x5c\x07\x1c\x58\x40\x7c\x99\x55\xbb\xbc\xdc\xaf\x83\xbc\xad\xa8\xb5\xca\x51\x1e\x5c\x7f\xb9\xbc\xb8\xfa\x40\x29\xb9\xf3\xa5\x6f\xd2\xae\x6a\x12\xf2\x75\x57\x6d\x3d\x79\x28\x8a\x63\xdb\x8d\x5b\x84\x3b\x60\xc0\x42\xf2\x73\x73\x47\xbe\x9d\xeb\xaa\xe9\xc8\x8f\xe2\xb8\xa7\x0f\x25\x81\x71\x73\x33\x29\x25\x44\x03\x63\xe4\xe6\x98\x17\x3b\xc2\x3e\x11\x42\xe9\xd0\xbf\xed\xf7\xaf\xbd\xf0\x80\xe4\xbb\x75\x70\x9b\xd6\xe9\x2f\xfc\x46\xa7\x65\xbb\x0e\x0e\x5d\x57\x27\x51\x74\x3a\x9d\xe0\x24\xa1\x6a\xf6\x91\x60\x8c\x45\xc8\x9d\x4b\x92\x73\x91\x97\x4f\x6f\x15\x72\xe7\x5c\x34\x66\xb1\x74\x1d\xb0\xfa\x1c\x90\xe7\x29\x5e\x5e\xac\x48\x9f\xfb\xd3\x4d\x35\x24\x08\x23\x8a\x09\xd0\x56\x2f\x31\x20\x6d\xf7\x5c\xf8\x75\xe0\xcb\x74\x5b\x78\xba\x4d\xb3\xa7\x7d\x53\x1d\xcb\x5d\x52\xfa\x13\x79\x83\xf1\x79\xb4\x93\xb4\x75\x9a\x21\xad\x6e\x7c\xeb\x9b\xde\x07\xc3\x9c\x7b\x5c\x56\xd3\xba\x84\xd5\x55\x9d\x76\x87\x45\xe4\x77\x5e\x14\xc9\x47\xc6\x71\x30\x81\x7d\xf0\x10\x1e\x63\x26\x41\x1b\x1d\x0a\x81\x97\xc4\xe3\x9e\x6a\x0b\x26\xd6\xb7\xe3\xbe\x33\x21\x42\xe1\x64\x28\xa5\x02\x29\x5d\xc8\x42\xa1\x38\xc4\xcc\x84\x6c\x6c\xbf\xba\xe5\xda\x40\xcc\x39\x66\x1c\xde\x92\xd3\x0b\x63\x46\x5c\x09\x10\xda\xf6\x43\x5b\x6d\xef\xb5\x06\x69\x64\x2f\x2c\x07\xad\x0e\x52\x3b\x70\xd2\x6d\x66\xf1\xfb\xd9\xcc\x0b\x79\xe4\x4a\x43\xac\xe4\x42\x9f\xb4\x32\x46\x11\x4a\xe6\xc2\x58\x80\xb2\x9c\xba\x18\xac\x50\x21\x06\x27\xe5\x8c\xb2\x91\xa1\x07\x3f\x53\x76\xa8\x95\x36\xfc\x57\x8b\x61\xb1\x33\xcb\x6c\x66\x19\x14\x16\xc6\x80\x52\x1c\x59\x0a\x62\x2d\x0e\x74\x6a\x37\x19\x28\x0c\x58\x49\xb1\x42\x30\x91\x51\x07\x5a\xc7\x14\x5f\x1c\xb7\x94\x6b\xe0\x66\x0c\x46\x2f\x40\xe0\x09\x18\x83\xa6\xb9\x05\xa7\x39\xce\x82\x07\x27\xa8\x8c\x41\x6a\x11\x62\x88\xcd\x0c\xe6\xf1\xe6\x3a\x36\xe4\x24\x77\x33\x61\x41\x53\x69\xc6\x42\x8e\x67\xc0\x0d\x0a\x0f\xd7\x20\x24\x30\x39\xe9\x2b\x44\xa3\xe4\xf7\xff\x86\x78\x09\xa2\xe9\x4d\x44\xd3\x0b\x89\x5e\x3d\x94\xf7\x0c\xe6\xf5\x5d\x7c\x0e\x3f\x12\x8c\x7f\x03\x00\x00\xff\xff\x89\xd3\x8b\xb9\x19\x05\x00\x00")

func assets_images_lock_svg_bytes() ([]byte, error) {
	return bindata_read(
		_assets_images_lock_svg,
		"assets/images/lock.svg",
	)
}

func assets_images_lock_svg() (*asset, error) {
	bytes, err := assets_images_lock_svg_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/images/lock.svg", size: 1305, mode: os.FileMode(420), modTime: time.Unix(1444442559, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_scripts_ds_store = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x98\x4d\x4a\xc4\x40\x10\x85\x5f\xb5\x41\x1a\xdc\xf4\xd2\x65\x5f\xc1\x1b\x34\xc3\x78\x02\x2f\xe0\x4f\x96\x81\x08\x32\xfb\x5e\x79\x2e\x8f\x66\x9a\x7a\xea\x40\x12\x30\xab\x88\xf3\x3e\x68\xbe\x40\xaa\x2a\xc9\xa6\xab\x2b\x00\xec\x70\xea\xef\x80\x34\x5d\x46\xb8\xf1\x8e\x45\x22\xd7\x8c\x40\x9b\xaf\xa9\xc6\x13\xfa\xfe\xed\x65\x78\x1e\xc7\x61\xb9\xd6\x8c\x96\x7b\x8d\x13\x5e\x31\x60\x3c\xcf\xb7\x5f\x16\x10\x42\x08\x21\xc4\x26\xd8\x62\xe3\xcd\xbe\xaf\x21\x84\xf8\x83\xb4\xfd\x21\xd3\x85\xae\x6e\xe3\xfd\x40\x77\x67\x39\x89\xce\x74\xa1\xab\xdb\x18\x17\xe8\x8e\x8e\x74\xa2\x33\x5d\xe8\xea\xe6\xa6\x65\x1c\x3e\x8c\x4f\x36\x4e\x28\x96\xe8\x4c\x97\x8d\x1f\x2d\xc4\x85\x70\xe5\x4a\xad\xff\xdf\x63\x75\xfe\x17\x42\xfc\x63\xac\x3b\x3e\x1c\x0f\xf8\x1e\x08\x66\xb4\x5e\x9b\xa7\xf5\xc8\x98\x8f\xaf\xc4\x95\x83\x40\xf0\x1f\x86\xb7\xf8\x89\xcb\x74\xa1\xab\x5b\x87\x01\x21\xf6\xe0\x33\x00\x00\xff\xff\x3f\x9e\xed\x13\x04\x18\x00\x00")

func assets_scripts_ds_store_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_ds_store,
		"assets/scripts/.DS_Store",
	)
}

func assets_scripts_ds_store() (*asset, error) {
	bytes, err := assets_scripts_ds_store_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1440977663, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_scripts_auth_dialog_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x94\x3d\x6f\xc2\x30\x10\x86\x77\x7e\x85\x37\x27\x52\x89\xd4\xb9\xea\x40\x29\x5b\xc5\xd4\xbd\x32\xb6\x4b\x2c\x8c\x1d\x25\x17\x52\x54\xf1\xdf\xeb\x8f\x7c\x38\xc5\x21\xc0\x84\x7d\xcf\x7b\xf7\xde\xe9\xe2\xe4\xbb\x56\x14\x84\x56\x49\x8a\x7e\x17\x0b\x84\xba\x33\x5a\xd5\x90\xbf\x0b\x22\xf5\x3e\x01\x01\x92\x7f\xf2\x1f\x78\x42\xc4\x05\xed\x7f\xcb\x23\xf3\x83\x5c\x54\xd9\x57\x95\x0b\x2e\x99\x50\x7b\xf4\x8a\x98\xa6\xf5\x91\x2b\xc8\x68\xc9\x09\xf0\x8d\xe4\xf6\x94\x60\x26\x4e\x38\x7d\x89\x89\x32\x2a\x49\x55\x6d\xc9\x91\x1b\x39\x26\xa6\xf2\x92\xb9\xd2\xcb\x1e\xc1\xa1\xd0\x07\x1f\x29\xe5\x15\x93\x75\x4c\x76\x07\x9f\x48\x89\x5c\xb7\x37\x72\xe7\xcf\x7d\x6a\x4b\x4e\x7b\x77\x61\x1c\xa2\x42\x29\x5e\xda\xe1\x19\xb4\x1f\x6a\xc4\x26\x29\x0a\xae\xd8\x3a\x17\x92\xf9\xe1\xa7\x81\x3f\xa9\xe9\xe1\xbe\xd6\x2d\x39\x6d\xcf\x46\x23\x53\x1d\x15\xb7\x4c\x57\xdb\x43\x42\x15\x35\xdc\x28\xef\xe2\xe3\xd9\xbb\xab\x69\x1f\x5e\x71\x2d\x80\x73\xe1\xd8\xc2\xe8\x1a\x5d\xb2\x39\xaf\x81\x36\x1c\xd7\xae\x06\xd0\xaa\xba\x6f\x62\x2d\x3c\x6d\xb6\x05\x5a\x2f\x36\x3f\x25\x8a\x72\xf9\xe6\xee\xef\x2b\x12\x2a\x46\x2b\x81\xd7\xab\xed\x7a\xf3\x81\x23\xd8\x8c\x21\x74\x7d\xb5\xf4\x7a\x3c\x6e\x2c\x1c\x58\x58\x20\x1d\x1a\xd2\x87\x47\x9a\xe9\xe8\x51\x23\xc3\x2b\xf1\x0f\x9a\x69\xe3\x86\xd9\x2e\x45\xec\xab\x0e\xb9\x56\xeb\xb0\x8b\xdd\x82\xe1\x1d\xcb\x8a\x52\x83\xb6\x6b\x95\x55\xb9\x6e\x8c\x85\xd1\xe3\x67\xd3\xf6\x0d\xef\x34\x3b\x47\xb6\xab\x7f\x8e\x5a\x1b\x73\xbc\x37\xe8\xcd\xb8\x9d\x6c\x84\x62\xba\xc9\x06\x53\xc6\xc5\x70\x30\xc8\x25\x4d\x0c\xfe\x17\x00\x00\xff\xff\xe8\x41\x22\xec\x97\x05\x00\x00")

func assets_scripts_auth_dialog_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_auth_dialog_js,
		"assets/scripts/auth_dialog.js",
	)
}

func assets_scripts_auth_dialog_js() (*asset, error) {
	bytes, err := assets_scripts_auth_dialog_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/auth_dialog.js", size: 1431, mode: os.FileMode(420), modTime: time.Unix(1444442559, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_scripts_pentagons_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3a\x7f\x73\xda\x48\xb2\xff\xe7\x53\xcc\x5d\xd5\x15\xc2\x06\x19\x73\xe7\xf7\xae\x96\xf8\x55\x61\x90\x63\x5d\x61\xf0\x03\x9c\x6c\x2a\x95\x4a\xc9\x68\x80\x49\x84\xc4\x4a\xc2\x36\xb7\x97\xef\xfe\xba\xe7\xf7\x08\x61\x67\x6f\x6b\xff\x7a\x97\x4a\x19\x31\xd3\xbf\xa7\xbb\xa7\xbb\xc5\xd9\x19\xd9\xd2\xb4\x8c\x56\x59\x5a\x90\x47\x9a\x17\x2c\x4b\x49\xc7\x3f\xf7\x3b\x6f\xce\xce\xe0\x3f\x19\x64\xdb\x7d\xce\x56\xeb\x92\x78\x8b\x26\xe9\x76\xce\xff\xd6\x86\x3f\x17\x2d\xd2\x4f\xe8\x33\x19\xb3\xc5\x3a\x4b\x48\x94\xc6\xe4\x1f\x59\x1a\x95\xeb\x28\x25\xa3\x8c\x3e\xf8\x88\xda\x4f\x12\xc2\x51\x0b\x92\xd3\x82\xe6\x8f\x34\xf6\x25\xd5\x29\x8d\x59\x51\xe6\xec\x61\x57\x22\x43\xc4\xdf\x15\x94\xb0\x94\x14\xd9\x2e\x5f\x50\xbe\xf2\xc0\xd2\x28\xdf\x93\x65\x96\x6f\x8a\x16\x79\x62\xe5\x9a\x64\x39\xff\xcc\x76\x25\x52\xd9\x64\x31\x5b\xb2\x45\x84\x34\x5a\x24\xca\x29\xe8\x92\x6f\x58\x59\xd2\x98\x6c\xf3\xec\x91\xc5\xf0\x00\x32\x95\xf0\x87\x02\x9d\x24\xc9\x9e\x58\xba\x22\x8b\x2c\x8d\x19\x22\x15\x1c\x69\x43\xcb\x9f\xa4\x5c\xe7\x7e\x45\xb4\x82\x64\x4b\x25\xd3\x22\x8b\x01\x78\x57\x94\xa0\x4e\x19\x81\xac\x48\x35\x7a\xc8\x1e\x71\x4b\x59\x29\xcd\x4a\xb6\xa0\x2d\xd8\x63\x05\x52\x84\x7f\x09\xd0\x43\x32\x36\xdb\x34\xae\xc8\x04\x4c\x17\x49\xc4\x36\x34\xe7\xb6\xeb\x1e\x0a\x02\x0c\x2d\x8b\x28\x41\x40\xcf\x78\x07\xc2\xbd\x20\x8b\x14\x03\x25\xfa\xad\xb2\x10\xa9\x65\x9c\x2d\x76\x1b\xf4\x13\x44\x91\xf4\x00\xef\x0c\xce\x23\x83\xfd\x9c\x6c\xa2\x92\xe6\x2c\x4a\x0a\x63\x78\x7e\x60\x1c\xd9\x52\x43\x39\xc0\xfc\x26\x9c\x91\xd9\xe4\x7a\xfe\xa1\x3f\x0d\x08\x3c\xdf\x4d\x27\xef\xc3\x61\x30\x24\x57\x1f\x61\x33\x20\x83\xc9\xdd\xc7\x69\xf8\xee\x66\x4e\x6e\x26\xa3\x61\x30\x9d\x91\xfe\x78\x08\xab\xe3\xf9\x34\xbc\xba\x9f\x4f\x60\xe1\xcf\xfd\x19\x60\xfe\x19\x37\xb8\xbb\x8d\x3f\x92\xe0\xe7\xbb\x69\x30\x9b\x91\xc9\x94\x84\xb7\x77\xa3\x10\xe8\x01\x83\x69\x7f\x3c\x0f\x83\x59\x8b\x84\xe3\xc1\xe8\x7e\x18\x8e\xdf\xb5\x08\xd0\x20\xe3\xc9\x9c\x8c\xc2\xdb\x70\x0e\x60\xf3\x49\x8b\xf3\x95\x68\x48\xd0\x60\x92\xc9\x35\xb9\x0d\xa6\x83\x1b\xf8\xda\xbf\x0a\x47\xe1\xfc\x23\x17\xe7\x3a\x9c\x8f\x91\xdd\x35\xf0\xeb\x93\xbb\xfe\x74\x1e\x0e\xee\x47\xfd\x29\xb9\xbb\x9f\xde\x4d\x66\x01\x01\xe5\x90\xd2\x30\x9c\x0d\x46\xfd\xf0\x36\x18\xfa\x20\x03\xf0\x25\xc1\xfb\x60\x3c\x27\xb3\x9b\xfe\x68\x54\x51\x77\xf2\x61\x1c\x4c\x51\x01\x47\xd7\xab\x00\x24\xed\x5f\x8d\x02\xe4\xa5\xb4\x1d\x86\xd3\x60\x30\x47\xb5\xcc\xd3\x00\x8c\x08\x42\x8e\x5a\x64\x76\x17\x0c\x42\x7c\x08\x7e\x0e\x40\xa9\xfe\xf4\x63\x4b\x92\x9d\x05\xff\x7b\x0f\x40\xb0\x49\x86\xfd\xdb\xfe\xbb\x60\x86\x14\xbd\x57\xac\x03\x27\x34\xb8\x9f\x06\xb7\x28\x38\xd8\x63\x76\x7f\x35\x9b\x87\xf3\xfb\x79\x40\xde\x4d\x26\x43\x6e\xf3\x59\x30\x7d\x1f\x0e\x82\x59\x0f\xe9\x8d\x26\x33\x6e\xb8\xfb\x59\xd0\x02\x3e\xf3\x3e\x67\x0f\x54\xc0\x6a\xb3\x1e\x3e\x5f\xdd\xcf\x42\x6e\xbf\x70\x3c\x0f\xa6\xd3\xfb\xbb\x79\x38\x19\x37\xe1\xc0\x3f\x80\x79\x40\xd2\x3e\xa0\x0e\xd5\xf1\x4e\xc6\x5c\x67\x30\xd6\x64\xfa\x11\xe9\xa2\x3d\xf8\x51\xb4\xc8\x87\x9b\x00\xd6\xa7\x68\x5b\x6e\xb5\x3e\xda\x62\x06\xd6\x1b\xcc\x6d\x30\x60\x09\xc6\x9c\xbb\xca\x92\x71\xf0\x6e\x14\xbe\x0b\xc6\x83\x00\x01\x26\x48\xe8\x43\x38\x0b\x9a\x70\x78\xe1\x0c\x01\x42\xc1\xf9\x43\x1f\xd8\xde\x73\xdd\xf1\xc4\x40\x36\xf1\x18\x72\xeb\x29\x5f\x6e\xf1\xa3\x25\xe1\x35\xe9\x0f\xdf\x87\x28\xbf\x84\x07\x7f\x98\x85\xd2\x77\xb8\xf9\x06\x37\xd2\xfa\x3c\x26\xbc\xe5\x2e\x5d\x60\x84\x78\x4d\xf2\xeb\x9b\x37\x84\x60\x90\xac\x21\x6d\x92\xc7\x08\x02\xeb\x21\xa1\x22\x59\x41\x9a\x84\x70\xcd\x48\x19\x7d\xa3\x24\xc9\x20\x5a\xb7\x11\xac\x15\xc4\x63\x3e\xf5\xc9\x2a\xca\x1f\xa2\x15\x26\x81\x24\xa1\x9c\x9e\x20\x25\x80\x5a\x84\x96\x0b\xbf\x29\x42\x7e\x97\xf3\xd8\xde\x40\x8c\x03\xbd\x62\x9d\xe5\xa5\x04\xf3\x01\x07\xb8\x92\x51\xff\xdd\x97\xd9\xed\x04\x4c\xf2\x65\x7e\x03\x71\x85\x91\x48\x2e\xc9\x45\xa7\xd3\x3b\x84\xe8\x0f\xff\x71\x3f\x43\x5f\x41\x80\x1e\x6a\xa0\x34\x22\xfd\x94\x6d\x78\xe6\xf0\x8a\x32\xca\xcb\x30\x5d\x66\x20\x49\x1a\x8b\x87\x78\x97\xf3\xcd\x5b\x96\x40\x76\xa2\x98\x99\x0a\xb4\x81\xca\x59\xfe\x17\x8d\x05\xb4\xf5\x73\xcf\x02\x90\xb4\x60\x5b\x3e\xf5\xaa\xd8\x41\x1a\x0f\xd9\x72\x49\x73\x9a\x42\xb2\xbc\x24\x77\xf2\xd2\x43\x60\x3f\xd6\x3b\x9e\x96\x4a\xf3\x69\xda\xb4\x94\xac\x40\xa1\x4e\xec\x03\xb6\x73\x48\xa2\x00\xbb\x4b\xd9\xb3\x05\x87\xab\x9e\x43\x37\x89\x8a\xf2\x3a\x8f\x36\x54\x22\x54\x48\xd8\xa0\xac\x18\x66\x29\xc2\x2c\x21\xdb\xf2\x9d\xef\x68\x6c\x6d\x63\x1f\x12\x70\x99\x95\xfb\x2d\xf5\x97\x48\x11\x21\x6d\xd7\x42\x4a\x6c\x49\xbc\xaa\x42\x97\x97\xa4\xa3\xf6\x0f\x78\x95\xf9\x4e\x0a\x41\xf0\xf2\x13\xae\x63\x59\x5e\xec\x71\x41\x84\x63\x00\xeb\x85\x34\x94\x04\x4c\xa2\x2d\xb8\x2e\x88\x70\x56\xb1\x65\x4f\x8b\xa4\x91\xfe\xe7\x92\x9c\xff\x6e\x59\xac\x7d\xe7\xb4\x8b\xdd\xc6\x3b\xe6\x19\x7e\xb1\x88\x12\x90\x52\x49\xd2\x6c\x39\x32\xb8\x4e\xf1\xbd\x77\xcc\xf0\xe6\x8c\xaa\x96\x77\x04\x16\x60\x2f\x93\x52\x86\xab\x23\x86\x86\x4e\xb3\xa7\x97\x1d\x0c\x0d\x8b\x40\x6f\xeb\x5c\xcd\x18\x99\xa7\x1b\x28\x10\x36\xd1\x9e\x64\x8b\xc5\x2e\x47\x44\xbc\xbd\x21\x21\xe4\xa4\xa0\x50\xc4\x3d\x44\x8b\x6f\xb8\xc4\x72\xb2\x48\xb2\xc5\x37\xff\xd0\x36\xd2\x7d\x81\x9f\x3c\x05\x42\x13\xac\xeb\xb4\xbf\xb9\x8e\x7e\x5a\x9f\x62\xde\x72\x0a\x55\x07\x30\x0c\x4e\x2f\x85\x4a\xed\x7a\x95\xda\x75\x69\xc9\xf6\x8a\xfa\x98\xd3\x42\xcb\x33\xba\x85\x72\xd6\xdf\x44\xcf\xc8\xaa\x5d\x11\xa1\x05\xb1\x62\xce\x4d\x27\xba\xda\x63\x70\x4f\x3e\xa5\x4f\x64\x08\xc5\x92\xd7\xf4\x57\xb4\x34\x07\x85\x92\x41\xf1\x15\x67\x4f\x7e\x14\xc7\xc1\x23\x78\xec\x08\xea\x26\x9a\xd2\xdc\x6b\x24\x59\x14\x37\x5a\x87\x0e\xb0\xc2\x6d\x20\xa6\xfc\xbb\x40\x5a\x6f\xe4\x71\x86\x50\xd1\xed\x52\x59\x00\x0f\xa2\xf4\x31\x2a\x86\x79\xf4\xf4\x9e\x81\x04\x4f\x51\x01\xf9\x03\xc8\xf3\x0a\xef\x9a\xe5\x74\x99\x3d\x13\x28\xd1\x24\x60\xb8\x81\x4b\x44\x41\x2a\x82\x06\x61\xb0\xce\xb3\x8d\x28\xd2\x67\xd1\x12\xee\x27\xdf\xb8\x5a\xf4\xc8\x56\x51\x99\xe5\x3e\x3a\x4e\x1f\x24\x2c\x7d\x50\x8b\x3e\x4f\x96\x5e\x43\x32\x6a\x34\xc9\x9f\x20\xdd\xb4\xad\x18\x47\xb3\xb8\x32\x2a\xff\x95\x2e\x74\x08\xa8\x65\xd4\x90\x68\x46\xfe\xac\x0f\xc4\x0e\x7c\x6f\xc9\x68\x52\xb9\x5a\x9e\x31\xac\xf8\xb2\xff\x6c\x25\xd9\xbd\x59\xde\x5b\xcb\x79\x14\xb3\x5d\x61\xf6\xc4\x77\x1b\x20\x2b\xd5\xf5\xa0\x40\xe4\x8a\x05\x94\x6d\xa3\x05\x2b\x2d\x16\x72\x41\xa7\xf2\x23\x77\x93\x9d\x01\x18\x6c\x9d\xb7\x08\x7e\x74\x2b\x0e\x76\x90\xeb\x6c\x58\x95\xdf\xc0\xf4\x96\xff\x56\x18\x82\x97\x03\xbb\xd9\x2f\x3b\xa8\x37\xe2\x1f\xe4\xca\x83\x65\x9b\x3d\x09\x18\xff\xb9\x2d\xd8\x3d\xb7\x08\x40\x9e\x56\xb7\xf7\x72\x7b\x8f\xdb\x47\xe4\x00\xd1\x7f\x90\x37\xba\x84\x73\xd0\xca\x57\x9e\x7f\x22\x52\x1c\x10\x41\x09\x24\xf7\xf6\x6a\x6f\xaf\xf7\xf6\x6a\x4f\x9c\xab\x02\x90\xa7\xae\xa0\xc4\x57\x0d\x2a\xcf\x57\x03\x2b\x0f\xd0\xe0\x72\x41\x21\xc8\xc3\x56\xf0\xca\x19\x14\xb8\xfc\x2e\xfc\xf9\x98\x69\xcc\xed\x00\x6d\xda\x66\x4b\xe3\x7e\xba\x4a\x6a\xaf\x1b\xbc\x21\x2c\xa7\x74\x9d\xf4\x2f\xc4\xe3\xe7\x72\x17\x92\x13\x79\x0e\x22\x86\x35\xc4\x5b\xbb\x24\x30\xaa\x5d\x12\x0b\xcf\x4e\xac\x9c\x1d\x2d\x76\x49\x89\xf9\xb4\x7a\x2c\xc8\xbd\xa9\x52\x2c\x02\xd9\xf1\xe2\x06\x8a\x3c\x59\x01\xf6\xaa\x15\x84\x53\xdb\xfa\xf3\x95\xfc\x37\xf8\x89\xcc\x06\x27\x44\x60\x5a\x5e\x22\x13\x42\x75\x47\xf9\x88\x9d\x18\x0e\x60\xb4\x73\xb8\x86\xaf\xc2\x69\x9f\x70\xf2\x83\x82\x72\x7d\x41\x18\xf9\x0e\x7b\xbc\x77\x93\xf1\x97\xc1\xe4\x1e\xda\x31\x28\x97\xfe\xee\xde\x44\x4a\x4f\xc7\x13\xf8\xf5\x55\x77\x32\xbf\x56\x94\xca\x21\xb3\x67\x9b\x29\xff\xe6\x35\x0f\xc4\x14\xdb\x13\xf1\xd5\xec\x83\x19\xb9\x5f\x88\x6d\xb3\xbe\x3f\xb2\x6e\xcc\xe3\x6c\x83\xe2\x96\x7b\x59\xda\xab\x8b\x1b\x8a\x13\x48\x88\xa5\xae\x96\xa4\x46\x95\x2e\x43\x96\xf0\x2d\xa8\x24\x6b\x2b\x6d\xd5\x4b\x1c\xa4\x5d\xff\xb6\xff\xf3\x97\x69\x7f\x18\xde\xcf\x00\xa6\xe3\x77\x1d\xd7\xf3\xa3\x24\xd1\xd7\x2d\xec\x7f\xfa\xec\x6e\xff\x40\xf5\x2d\xeb\x63\xab\xd0\xaf\x6a\x24\x70\xa1\x44\xb0\xe3\xfb\x48\xc7\x80\x1c\xf0\xb3\x57\xa9\xec\x0f\x68\x8a\x6a\xd3\x6b\x56\xeb\x2a\x55\x44\x8c\xe9\x93\x31\x61\xb3\xa6\x8a\xd6\x6c\xbe\x1f\x53\xb9\x96\x96\x6d\x82\x48\x2d\xda\xb6\x60\xa2\x75\x7b\x35\x3c\xbf\xac\x72\x28\x2e\xca\xfd\x20\xcb\xf2\xd8\x6b\x40\x19\x51\x0d\xd3\x0a\xc4\xde\x40\xfc\x3e\xcf\xae\x78\xea\x5d\x78\xe2\x39\x2e\xdb\xee\xf8\x17\x78\xcd\x55\x8e\x46\x47\xfc\xbf\xe3\xc4\x15\x5a\xe2\xea\x33\xea\x20\xe3\xa1\xec\xa0\xbc\xba\xcb\xdc\x39\x16\xcb\x2c\xce\x71\x3c\xb3\xc2\x3e\x09\xfc\xae\x80\x2a\xfc\x3f\xe1\xde\x67\x53\x5d\xf6\xb7\xdb\x64\x0f\x32\xe1\xcc\x98\xb6\x0b\x5e\x2c\xe0\x60\x72\x41\xa1\xb2\x84\xea\x90\xd0\x78\x25\x26\x09\xd2\xe1\x71\x0b\x13\xd5\x99\xae\x05\x34\xb7\xd3\x8e\xdf\x39\xe7\x95\x42\xdb\xde\x3f\x87\xd5\xb6\x06\x12\xa5\xc2\x0f\xb3\x17\x63\x49\x3d\xdb\x16\x82\x00\x00\xf1\xb8\xcb\x61\x64\xb7\x48\x42\x53\x6b\x16\xe0\x84\xb6\x0f\x7b\xab\x72\xdd\x03\xd0\xb7\x08\xd7\x23\xa7\xa7\xcc\x84\x0e\x12\x51\xc4\x8f\x91\xf8\xc4\x3e\xab\x3e\x15\xc3\xd2\x80\x5f\x0a\xeb\x1a\x6a\x04\xe7\xb1\x25\x4b\x4d\x63\xfb\xdd\xe2\x13\x77\x0f\x07\x16\x4e\x8d\x76\xe8\x2b\x8a\x97\xb5\xd8\xb4\x65\xe1\x36\x8e\x1e\x0a\x2f\x06\xa3\xc3\x2d\xef\x77\xe0\xdf\xb9\x2d\x90\x5d\xd7\x29\x37\xaf\x13\x8e\xdb\xfc\x36\x5a\xe1\xd1\x42\x6b\x1f\x77\x7b\xb6\xe4\x52\x4e\x22\x2b\x86\xe2\x97\xbc\x44\x96\x0a\x46\x38\x45\xfb\xd2\x50\x39\x31\x76\x3a\x70\x3e\xf0\x0e\xed\x0d\x38\x46\x50\xd4\x9d\xe1\x03\xfa\x46\x1c\x93\x48\x86\x08\x18\x76\xb3\x85\xb4\x97\x96\x7c\x68\xb6\x96\x4e\xa2\xdd\x61\x21\xba\x49\xf7\x02\x6a\x13\x1e\xcf\x70\xfb\x74\x8c\xc7\x0d\xa2\xad\xc1\x27\xd0\x52\x9d\x9e\x21\x5c\x97\x77\x41\xd0\xb2\x11\xa6\x59\xc8\xd8\x06\xde\x20\x29\x4b\x21\x1f\xda\xfc\x2e\x4d\x67\x29\x1e\x58\xea\xf1\x1d\xb8\xaa\x3a\x9d\x66\x0b\xfa\x22\xf8\x00\xfd\xf8\x9c\xad\xb6\x23\xd5\x78\x26\x84\x14\x85\xe6\x91\xd6\xb4\xa6\x55\x94\xa7\xed\x06\x85\x70\x78\xb7\xbe\xa8\xf8\x7e\x7d\xbc\x6c\x77\xc5\xda\xb3\x73\xb8\xcc\x4a\xb2\x2f\x73\x84\xa9\xa6\x2f\xb7\x4e\xfb\x2b\x3a\x23\x64\x53\xfe\x79\x72\xe0\x81\x75\xa4\x74\xc6\xae\xe9\x4a\x14\xee\x09\x1c\x56\x17\xc8\x82\xb3\x77\x8f\xd1\x51\x17\x83\x4b\x06\x30\x2e\x00\xd1\xd3\x99\xc9\x2d\x67\xc8\xf9\x45\xf3\xf4\x1c\xe9\x77\xfe\xfb\x42\xf5\xf2\x68\xd0\x60\xc4\xa7\xe5\x5f\x42\x1c\x8a\x36\x94\x5f\xb7\x71\x8e\xb2\xca\xb1\x37\x6f\xc8\x41\xaf\x68\x68\x79\xbf\xcd\xf0\x85\x0c\x81\xd0\x2c\x71\x04\x45\x8a\xdd\x03\xd4\x00\x45\xc1\x4f\x29\x22\x8f\x08\xc2\x1b\xfa\x18\xda\xe4\x82\x50\xc8\x7f\x7b\x88\xfe\x74\x25\xa6\xb8\x91\xa0\xb7\xe0\xf4\x7c\x5b\x3f\xc3\xc2\x73\x87\xab\x02\x16\x07\x9a\xf2\x1d\x8f\xbf\xc8\x29\x38\x4a\x90\x50\xfc\xe6\x35\x04\x40\xc3\xb9\xbd\xa8\xd8\xb4\xb1\x56\xb4\x94\x28\x57\xfb\x30\xf6\x8c\xee\x56\x63\xf1\x27\x07\xbb\x5a\x88\xd4\x10\xad\x88\x12\xb3\xc7\x86\x4e\x1e\x0e\x92\xcf\xf0\xce\x32\x4c\x15\x90\xa6\xf4\x90\xc5\x7b\x9f\xa5\x05\xcd\xcb\x2b\x0a\xc6\xa4\x9e\x83\xdf\xaa\x40\x2e\xd6\x2c\x89\xc7\x59\x4c\x8b\x4f\x9d\xcf\xe4\x5f\xff\xd2\x79\x31\xdd\x25\x49\xd3\xc9\x38\x9b\xe8\x1b\xed\x3f\x14\x59\xb2\x2b\x69\x3f\x8d\xaf\x01\x60\x06\x72\xd3\xd4\xe5\x20\x91\x5e\x83\x16\xd6\xae\x33\xb6\x1f\x6d\xc1\x85\xe2\x01\x4a\x56\x05\xb6\xa0\x9f\x58\x5c\xae\x79\x24\x5b\x8b\x6b\xca\x5f\x08\x56\x56\x77\xdb\x18\xac\x3b\x63\xff\xa4\x7a\x6e\x74\x74\x04\x05\xad\x18\xc0\x35\x5a\x8a\x20\x38\x7f\x42\xa7\x7c\xd1\x7f\x00\x24\xd1\xdd\x99\x00\x35\xfe\x66\x15\x22\xe8\xb4\x75\x15\x71\xb9\xce\xb3\x27\x5e\xff\x04\x79\x9e\x01\xb7\x0c\xfc\x3a\x67\x31\x15\x2f\x2d\x19\x04\x84\x8e\x84\x86\x95\xdd\x6a\x99\xa8\x2e\xa7\x86\x0b\x4a\x5e\xb2\xc5\x37\xef\x35\x1a\x8e\x7e\xc7\x69\xb9\x06\xd4\xeb\xa8\xe6\xeb\x2c\x72\xfa\xcb\x8e\x16\xa6\x02\xbc\x3e\xd6\x2f\x14\x62\x4e\x98\xed\x4a\xcf\xa8\x60\x19\x9d\xdf\x1b\x9d\xb3\xee\xdf\x5e\x65\x89\x88\x47\xb5\x31\x52\x2b\xf5\x6a\x25\x7c\x5d\x31\x63\x95\xe3\x96\x53\x5e\x2a\xfd\x8d\xa5\xe0\x64\x1f\x70\xad\xd6\x6b\x6d\xa8\x1b\xbe\xd8\x3b\xc8\x60\xbe\x22\x69\x31\xa8\x81\xd2\x34\x6d\x16\x46\x23\x9d\x8c\xf5\xa8\x14\x13\xb2\x49\xc3\xd9\xd2\x4e\xd6\x3c\x13\xe7\xb4\x2d\x92\x31\x5e\xfd\xe6\xc7\x14\x4c\xbe\x79\xa3\xd1\x62\x2d\xdb\xbd\x5d\x81\x89\x3a\x22\x5b\xbc\x3e\x0e\x93\xb3\x99\x7c\x4a\x53\x59\xe6\x5d\xc0\x5d\x6b\x0f\x50\xb8\xf4\xdc\xd3\xbd\x6a\xcc\x29\x32\xe6\x48\x40\xdb\xc9\xc3\x57\xba\x50\xf9\xd4\xab\x3b\xb7\x66\xef\x25\x12\x47\x43\x17\xef\x39\x2c\x5e\xe9\xb3\x31\xaa\x34\x35\xdc\x08\x03\xb1\xe3\x35\xba\x71\x43\xa5\x18\x09\x0d\xbd\x2d\x8d\xf2\x29\x48\xe5\x41\x25\xde\x69\xd9\xe7\xd6\x72\x4e\x47\x21\xf2\x11\x86\xf0\x2a\x5d\x09\xbd\x84\xa4\x70\x9e\x27\xcb\x25\xc4\x90\xc9\x7e\xb8\xb8\xaf\x2e\x9a\xce\x59\x38\xd2\x5b\x97\x9c\xbe\xab\x0c\xb5\xb6\xe7\xb8\x69\xdb\xd6\x00\xeb\xb7\x6e\xed\x00\x7b\x7f\x80\x2f\xf8\xb5\x2b\xfc\x0c\xfe\x9b\x3f\xa0\x77\x51\xf3\x87\x63\x8d\x8b\x9a\x40\x48\xd3\xcb\x73\x06\x00\x9a\xff\xac\x26\x0e\xfe\xf3\x09\x3f\x8e\x53\x65\x93\xde\x01\xec\x47\x0d\xbb\x57\xb0\xfb\x43\x58\x3d\x57\xe7\x20\x27\x12\x43\x4d\xd7\x25\xa0\x72\x9b\x25\x83\x1b\xb3\xdc\xf3\x79\x67\x23\x5f\x3d\x44\x5e\xf7\xe2\x02\x9a\x43\xf5\xa7\x01\x3c\x04\x01\xd9\xd5\xfb\x65\x76\x97\xd3\x05\xc3\x9f\x36\x79\xd8\xa6\xeb\xbb\xbc\xd1\x6c\xf4\x2a\xd4\x1f\xe8\x8a\xa5\x77\xe0\x5d\x9e\xdd\xa4\x08\xc3\x7f\x15\xf5\xf1\x57\x30\xea\x05\x9a\xf4\xab\xdd\x2f\x71\x47\x53\x9e\xb9\xc8\x0a\x6f\xe9\x4c\x00\x40\xa8\xaf\x27\x6a\x78\xd0\x3d\xbb\x68\x9e\xe8\xb1\xb2\xb4\x6a\xcf\x21\xb5\xd7\x2d\x13\x76\x07\xbf\x8d\xd4\x47\x43\x0a\x9d\xfa\x6b\xf5\xdd\xae\xad\xef\x06\x6e\xda\x79\xe6\x3d\xb7\xc8\xbe\x69\xd0\x2a\x2e\x6b\x23\x24\x2c\xad\x43\xa8\x74\x86\x26\xc6\xb3\x82\xba\xe6\xb4\xcf\xd1\x79\x73\xe3\xe6\x5f\xf3\x06\xea\xd5\x04\xbc\x85\x0c\xac\xda\x1b\x5e\x3d\x33\xc4\x45\x48\x59\x0e\xeb\xce\x5b\xfe\xd4\x29\x15\x93\xd5\xe2\x8c\x9b\x14\x3e\xa1\xd6\x4e\x8b\x84\xa3\x73\x8a\x9c\x40\x4d\x86\xb6\x5e\x39\xbd\x9c\xa2\xad\x7b\x87\xd3\x92\x97\xa1\x53\x7d\xf1\x8d\x01\xdc\x0e\xb8\xf3\xeb\xf7\x57\xf3\xba\x66\xfe\x3b\x12\x7b\x0d\x8d\x17\x33\xbb\xb0\xa4\xca\xeb\xca\x8e\x9c\x8a\x67\x65\xd8\xff\x5c\x00\xff\x3f\x2e\x00\x1d\x27\x3f\x76\x07\x68\xf0\x3f\xe0\x1a\x58\x25\xd9\x43\x94\xf4\x93\xed\x3a\xd2\xc4\xad\x17\xa9\x36\xa8\x16\xc3\x33\xf2\xb7\x2c\xe1\x0e\x52\x93\x48\x0b\x95\xb4\x7b\x00\x85\x71\x23\x22\x81\x47\x49\x8b\xb4\xe5\xab\x41\xf3\x20\x3e\x4f\xba\xe6\x49\x53\x81\xb4\x34\x9e\xcc\x83\x9f\x48\x11\x3d\x82\x99\xcf\xf0\x17\xb2\x10\xf3\xfc\x37\x5e\xd0\xe8\x45\x38\x40\x4a\xca\x3d\x29\x92\xec\xa9\x45\xa2\x04\x7f\xf4\xba\x5a\xcb\x7e\x08\x7f\xa6\xc1\xd2\x64\xcf\x13\x9c\xa4\x06\x59\x10\xaa\xf4\x1d\xa0\x67\xdb\x92\x6d\xd8\x3f\xc5\xd4\xbf\x5e\xb5\xf6\x2b\xba\x19\x93\xb5\x6d\x9b\xb5\x0f\x8c\xf6\xbd\xd2\x0b\xd4\x25\x18\x37\x6f\xbc\xd6\x4d\x85\x2a\x5f\xda\x09\xc6\x4e\xa2\x95\xb4\x2a\x3d\xc3\x44\xaf\xc9\xab\xfe\x3a\x2a\x26\x4f\xe9\x5d\x9e\x6d\xa1\xed\xdf\x7b\x0d\xac\x0d\x34\xa2\xf5\x22\xc4\xfd\x55\x8e\xc6\xff\xe4\x22\x7c\x76\xc2\x91\xe7\xbd\xdf\x36\x3b\xa9\x34\x2a\x96\x0a\xd6\xae\x6e\x50\xaa\x1a\xba\x89\xf6\x68\x8a\xad\xde\xb1\xba\x56\x7a\x5a\xb3\x92\x36\x5c\x80\x83\x72\x47\x27\x99\x48\xbe\x52\x86\x82\x47\x3c\xbe\x25\x7f\xfd\x2f\xfd\xe5\xf4\x12\xbf\x41\xed\xe1\xe4\x14\xa7\xfe\x11\x80\xe6\x5d\xde\x19\x39\xff\x7b\xa7\x79\xa2\xb5\x3a\xeb\xda\xb6\x3d\x73\xe6\xc6\x4e\xf5\xf3\xef\x12\x42\x8f\x90\x5a\x54\xeb\x9f\x97\xaa\x9f\x83\xda\xe7\xa5\xca\xe7\xfb\x1b\xf3\xf7\x68\xcd\x53\xad\x78\x0e\x6e\xd7\x63\xde\xc3\x36\x2b\x75\xa2\xa2\x22\x29\xf2\x85\x39\xfa\x32\x1b\x46\x65\x74\x3f\x1d\x21\x20\xec\x9e\x6d\xd3\x95\x3b\xa5\x3b\xee\xc9\xca\xbd\x04\xb4\x74\x7f\xbd\xf2\x6a\x40\x57\x22\xf5\x58\xf5\x00\xf7\xf3\x54\xe5\xf4\x1f\xb8\xb0\xe1\x8c\x6b\xde\xc1\xf6\x0e\xc9\x8d\xb2\x95\xf6\x34\xca\x12\x31\x8e\x4d\xb2\x95\xa7\x21\xf0\xf6\xd4\xab\xdd\xe6\x91\x4c\xa2\xe7\xb9\x90\xa0\xcf\x4f\x6d\xf2\xd6\xcc\xd2\x42\xb8\x3c\x48\x3e\xd5\x14\xd2\xb3\xfc\xe1\xb0\xfc\x73\x02\xbe\x32\x9f\x3f\x3e\x17\xac\x4c\x4b\xd5\x34\xb0\xc0\xb8\x06\xe9\x0b\x26\x5f\x1f\x36\x96\xec\x99\xc6\x32\xc0\x5d\xa8\x32\xdb\x9a\x3a\xc7\xdd\x4a\xe8\xb2\x3c\xb6\xa7\x12\x55\xe3\xbc\xd3\xf9\x4b\x2d\x61\x9d\xac\x0c\x08\xa4\xc7\xef\x4d\x74\xf3\xff\x0b\x00\x00\xff\xff\xaf\xca\x83\xc8\x5b\x32\x00\x00")

func assets_scripts_pentagons_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_pentagons_js,
		"assets/scripts/pentagons.js",
	)
}

func assets_scripts_pentagons_js() (*asset, error) {
	bytes, err := assets_scripts_pentagons_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/pentagons.js", size: 12891, mode: os.FileMode(420), modTime: time.Unix(1440952118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_scripts_upload_circle_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x6b\x6b\xdb\x3c\x14\xfe\xde\x5f\xa1\x2f\xc5\x76\xdf\xc4\xaf\x93\xbe\x7d\x61\x0b\xd9\xc8\xba\x04\x0a\xbd\x84\x36\x83\x8d\x52\x8a\x6a\x2b\x89\xc0\x91\x3d\x59\x6e\x5a\x46\xfe\xfb\xce\x91\x6f\xf2\xa5\x49\xf7\x61\x1b\x0d\xb6\xce\xd1\x73\x1e\x3d\xe7\x22\xdb\xcb\x54\xf8\x8a\x47\xc2\x76\xc8\xaf\xa3\x23\x42\x8a\x77\x72\xce\xa5\x1f\x32\xbd\x4c\xe0\x9f\x5a\xf3\xc4\x7d\x8c\x65\xb4\x89\xd5\x9d\xcf\x04\x23\x63\x12\x44\x7e\xba\x61\x42\xb9\x2b\xa6\xa6\x21\xc3\xc7\x2f\xaf\x17\x81\x6d\x65\x6e\xfd\x04\xfd\x2c\x67\x64\x00\x50\xa1\x92\x83\xdb\xd1\xa9\x6b\x73\x1a\x87\x11\x0d\x0e\x6e\xcf\xdc\xba\x00\x80\xd7\x4a\xb2\x24\x99\x53\xb5\x3e\xc0\x5f\xfb\xf5\x63\x70\x6c\x40\x30\x09\xb8\x8a\xae\xd8\x82\xbd\xa8\xbd\x20\xa5\x67\x5f\x81\x2b\xc2\x18\x38\x7e\x2a\x25\x58\x8b\xc3\x64\x6a\xbb\xf3\xdb\x9b\xab\xf9\xe2\xf1\xee\x7c\x7a\x3d\xad\xb9\xa3\x24\xe0\x26\xd8\x96\x4c\xe0\xd1\xd6\x9c\x76\xe8\xd1\xb1\x13\x1c\xbd\x51\x65\x9a\x5c\x2f\xee\x4a\xc3\xc0\x30\x7c\x9b\x5f\xde\x4c\xbe\x96\xa6\xe1\xc8\xc0\x03\x09\x54\xa4\x5e\x63\xe6\x26\x4c\xcd\x73\x3d\xc0\xa9\xac\x97\x42\xa3\x99\xa4\x7a\xa1\x51\x28\x35\x99\x5c\x14\xe0\x3c\x12\x0a\x96\x00\xe3\x0a\x54\x75\x97\x61\x14\xc9\x16\x0a\x39\x21\x03\xcf\x73\xc8\x3f\xc4\x3a\xb6\x32\xdd\xf5\xcf\x33\x95\x44\xd2\x80\xa7\xc8\xc1\x73\xff\xfb\x90\xab\xc3\x97\xa4\x8d\xf1\x09\x8e\x59\xd0\xe9\x4a\x3d\x1e\x69\xa2\x94\xe4\x4f\xa9\x62\xb6\x15\x58\x3d\x62\x5d\x79\xee\x59\xcf\x73\xbd\x01\xb5\x20\x78\x1e\x0a\x58\xf4\xea\xaf\xc4\x23\x03\xf8\xef\xe1\x72\x8e\x4f\x72\xf3\xc9\x10\x1d\xde\xb9\xbd\x5f\xad\x9f\x0c\xf3\x02\x03\x20\xa6\x52\x29\xb2\xb7\xdd\x51\x79\x70\x26\x82\xef\xfa\xd8\x67\xd5\x26\xad\x61\xc2\xdb\x79\x00\x05\x87\xf0\xa7\xed\xf3\x8b\x1c\x3a\x47\xf9\x51\xa2\xf4\x4d\x18\x3f\x4a\xde\x07\xf3\x87\x52\x4e\x0e\x69\x51\x89\xd8\x99\x44\xa4\xfa\x19\xe4\xfa\x48\xb2\x8a\x80\x47\x84\xd0\x72\x14\x78\x78\xaa\xac\x19\xde\xa8\xde\x2d\x57\xfe\xba\x68\xb3\xb2\x7a\xa1\x91\xf4\x5a\x51\x26\x58\x47\xc5\x1a\x19\x8f\xc7\x1d\x5d\x5a\x55\x54\x47\x9a\x70\x7f\x57\x63\x8f\xc7\xed\x2e\x6c\x96\x26\xf6\xb6\x9b\xa8\x28\xb6\x73\x99\x77\x84\x85\x09\x6b\x73\x7a\x2f\x12\x95\xaa\x84\x32\x87\x08\xcb\xc6\xd3\x2c\x92\x1a\xb3\x83\xb0\xd3\xc8\xe7\x33\x4f\xf8\x13\x0f\xb9\x7a\xc5\xc4\xae\x79\x10\x30\x51\x9f\x87\x4d\xcc\x52\xd8\xbd\x48\xfa\x2d\x6c\x4c\xe7\xc6\x48\x2c\x90\xf6\x24\xb7\x19\xdd\xcc\x70\x62\xe6\x2c\xcb\x18\xb9\x6f\xdd\x62\xbd\xe6\xbd\xd4\x6b\xdf\x35\x0f\xf7\x1a\xeb\xa1\x22\x52\x5e\x92\xd9\x2c\xae\x4d\xbe\xa5\xa4\x1b\x76\xcb\x7e\xa6\x2c\xc1\x59\x27\xd2\x30\x34\x0f\xa9\xb3\xb3\xe0\x1b\xd6\x61\xcb\x4f\x73\xf8\x6a\x8c\xb9\x10\x4c\x5a\xd5\x25\x80\x3c\xcc\xa2\xc7\x20\xa6\x18\x75\x8a\x98\x19\xb1\x82\xcb\xdd\xab\xe9\xdf\x60\xbe\xe5\x22\x88\xb6\xae\xcc\x16\x26\x82\x6f\x28\x62\xcd\xd0\xcb\x36\x76\xb8\x4f\xe0\xa8\x17\x1c\xa3\x11\x5b\x8c\xa2\x78\x0f\xa1\x4e\x51\x72\x02\x3e\x15\x3e\x0b\xdf\x8e\x9f\x33\x7e\x3b\x76\xe6\x66\x46\x57\x10\xca\xec\xfc\x16\x8b\x71\xc6\xa3\xd9\x5f\x26\x4f\xc4\x68\x4d\x6a\x8a\xb2\x82\xd1\xd6\x21\x48\xbf\xb9\xcf\x21\xff\x92\x21\x0c\xb3\x63\x72\xfa\xbf\x37\xea\x4a\x89\x46\xa8\x7f\x2a\xfc\xcd\xbc\x94\x81\x4d\x79\x68\x3d\x3b\x79\x59\x36\x1a\x5a\x49\x2a\x92\x65\x24\x37\xd8\xcf\x80\x47\x71\x11\x06\x32\x75\x55\x34\xe3\x2f\x2c\xb0\x4f\xf5\xd0\xee\xe1\x18\xd7\x3f\x8e\x65\xf0\xc8\x4f\x91\xb5\x74\xf9\x01\x34\xaa\x2c\x34\x08\xa6\xcf\x10\xf6\x92\x27\xf0\xd9\xc0\xa4\x6d\x61\x43\x02\x5c\xab\x86\x8a\x3a\x29\xa0\xf0\x23\xa9\xf8\x7a\xd5\x01\x51\xce\x9d\x83\x2f\xbf\x03\x00\x00\xff\xff\xef\x1d\xc7\x85\xef\x0a\x00\x00")

func assets_scripts_upload_circle_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_upload_circle_js,
		"assets/scripts/upload/circle.js",
	)
}

func assets_scripts_upload_circle_js() (*asset, error) {
	bytes, err := assets_scripts_upload_circle_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/upload/circle.js", size: 2799, mode: os.FileMode(420), modTime: time.Unix(1441223094, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_scripts_upload_file_chooser_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x4d\x6f\xe3\x36\x10\xbd\xef\xaf\xe0\x5e\x56\x12\x9a\xa8\xdb\x3d\x36\x0d\x8a\xac\xad\x16\x0b\x24\x9b\x45\xec\x16\x9b\x93\x21\x4b\x23\x8b\x28\x43\xaa\x14\x65\xc3\x28\xfc\xdf\x3b\xa4\xbe\xc8\x98\xb6\x95\xcd\xc9\xd1\xbc\x19\xbe\x79\xf3\x41\x86\x45\xc3\x33\x45\x05\x0f\x23\xf2\xdf\xbb\x77\x84\x6c\x53\x49\xe6\x4f\x77\x7f\xae\xee\x93\xbb\xbf\x93\xd5\xf2\xcb\x43\xf2\xf8\xd7\x92\xdc\x92\x5f\x3e\xde\x68\x7b\x8f\x27\x7f\x50\x06\xb3\x52\x88\x1a\xa4\xf1\x25\xf8\xa7\x4a\x5a\xc7\x82\x6b\x53\x8d\xb6\x1a\x38\x3a\xf2\x86\x31\xe3\xda\xd9\x57\xc0\xd3\x35\x83\x1c\x4d\x4a\x36\x70\x63\x59\x28\xaf\x1a\x85\xdf\x73\x91\x35\x2f\xc0\x55\xbc\x01\x95\x30\xd0\x3f\x3f\xef\xbf\xe4\x61\x50\x60\xe4\x6b\x83\x0a\x22\xdb\x31\x97\xe9\x66\x51\x52\x60\xf9\x39\x6f\x8d\xba\xae\x0d\xec\xd8\xfd\x1e\xd2\x2d\x2c\xe9\x0b\x08\x43\xa1\x65\x3d\x42\x24\x6c\x68\xad\x40\x26\x5b\x0c\x57\x87\xc6\xfd\xa0\xb3\xb2\x74\x88\x2b\x29\x94\x50\xfb\x0a\xcc\xd1\x43\x9a\x8e\xc6\x3a\xa4\x04\xd5\x48\xee\xca\x61\x02\xde\x9c\x8e\x58\x7b\x23\x82\x23\xbd\x25\x6d\xa7\x2b\x2d\x48\xf8\x1e\xc8\x87\x0f\xa7\x32\x7d\x7f\xdb\xe6\xda\xc7\xe9\x23\x65\x29\xcf\x80\xcd\x5f\xc1\xc3\x4e\xb6\x83\x75\x26\x12\x5b\x94\x62\x47\xf9\x66\x3e\x54\x21\x2c\x52\x56\x43\x74\x29\xa7\x13\xa7\xf8\x24\xcb\x18\xa4\xb2\x67\xe1\xcf\x65\x6a\x49\xcf\x32\x1a\xfc\x7c\x24\x8c\x9a\x8e\xd2\xa3\x6c\x6d\x4d\x6d\x79\x34\x7a\xb2\xea\xc7\xee\x27\xf3\x40\xc1\x7b\x21\x8e\x18\x4e\x2c\xca\xc4\xd6\x27\x04\x23\xe4\x62\x17\x67\x54\x62\x01\xe2\x7a\x47\x55\x56\x2e\x32\xe0\x10\x76\x96\x59\x6b\xf9\xf6\xf4\xf8\xf0\x6d\xb9\x5a\xcc\x92\xaf\x49\xdf\x23\xf1\x1a\x21\x46\x81\xe8\xca\xb3\x53\x2e\x77\x87\xe6\xf6\xb8\x05\xe9\x6d\xf8\xe9\xb5\x18\xe0\x10\xe7\xa9\x4a\x97\x32\xe5\x75\x01\x72\x84\xbb\xdf\xe3\x5c\x8a\x2a\x29\x0a\xc8\xb4\x18\x41\x26\xaa\x7d\x60\xd7\x05\x90\x22\xe8\x2d\x30\x87\x22\x6d\x98\x99\x89\x4b\xe3\xa0\x17\x5d\x74\xf3\xf6\xae\x98\x34\x8b\x04\xb0\xac\x83\xcb\xd4\x8a\xdd\x7d\x5d\x2e\xdc\x7a\x5d\x2e\x87\xa8\xbc\xa5\xf0\x29\xf2\xf6\x71\x99\xd8\xb8\xc7\x85\x8c\xf5\xad\x50\xc7\x0c\xf8\x46\x95\xe4\x16\x45\xfc\x18\xbd\x59\x0e\x5f\x03\xbb\xc2\x76\x89\xbc\x50\x65\xee\x37\x2f\x89\xa9\x52\x0e\x51\x6c\x3d\xdb\x08\x56\x7b\x07\xbd\x29\x30\xad\xa1\x5d\x45\xe1\xb9\x64\xed\x7e\x91\x62\x47\x38\xec\x48\x22\xa5\x90\x61\xc0\x05\x29\xac\xdb\x98\xe9\x3b\x8c\x83\x0c\x8e\xf7\xb8\x13\x31\x1c\xb3\x39\x9b\x87\x7b\x2b\xfa\x56\xe6\x70\x19\xaf\x45\xbe\x8f\xd3\x3c\x37\xd0\xfb\x8e\x47\x7b\x27\x0b\x9c\xf1\xe0\xca\x5a\x48\x7a\xe8\xad\xed\xd1\x91\x9d\x12\x8a\xe9\x01\x71\x62\x99\x91\xf9\x91\x60\xa2\xb2\xe2\x88\xca\x0d\xf1\xfa\xd1\xe2\x89\x90\x95\x29\xdf\x68\x2e\x27\x97\xf4\xd8\x4b\x76\x24\xa7\x91\x3c\xa7\xea\x17\x5a\xdb\xce\xe7\xde\x3a\x2d\xa2\xaf\x73\xd7\xfe\x1e\x92\x8c\x66\xff\xd8\x1c\x61\x24\x79\x6e\x7c\xdd\x01\xee\x1b\xa9\x25\x27\xdb\xcd\xd9\x9d\x89\xc4\x3e\x8b\x86\xe7\x38\xd1\x33\x46\xf1\xf0\x27\x34\x87\xc3\x2d\x64\xb2\xc1\xaf\x20\xbf\xa3\x8f\x76\xc5\x41\x2e\x14\xf9\xa9\xfd\xbd\xa3\xb9\x2a\x7f\xfe\x74\x8c\x7e\xee\xd1\x0a\x97\x52\x07\x2e\x81\x6e\x4a\xe5\xa2\x73\x4c\x55\xaf\x4f\x84\x3f\xa4\xaa\x8c\xeb\x7f\xa5\x0a\xcd\xaf\x4a\xec\xc2\xee\xe4\x6b\x88\x33\xc3\xed\xfb\x15\xf9\x14\x61\xb8\x57\x80\xe7\x01\xf0\xac\x01\x03\x79\xad\xd0\x70\xc0\x6f\xb7\x0e\x65\x5b\x2b\xbb\xbc\x46\xf1\x31\xff\x83\xaf\xce\x66\xea\x08\x39\x3d\x77\xbe\x2d\xe9\xac\x12\xf7\x59\x38\x3e\x8f\xe3\x5a\xed\xb1\x28\x48\xba\x62\xe9\x1e\x5d\xc2\x82\xfc\x4e\x82\x35\x13\xd8\x06\xe4\x57\x82\x0b\x83\x77\x5d\xd3\x0e\x7e\xb7\x25\x2d\x1e\xe8\x64\xfd\x87\xa0\x43\xa4\xd3\xf9\x3f\x00\x00\xff\xff\x33\x5b\x7f\x07\x4a\x0c\x00\x00")

func assets_scripts_upload_file_chooser_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_upload_file_chooser_js,
		"assets/scripts/upload/file_chooser.js",
	)
}

func assets_scripts_upload_file_chooser_js() (*asset, error) {
	bytes, err := assets_scripts_upload_file_chooser_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/upload/file_chooser.js", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1441392857, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_scripts_upload_sizing_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x5d\x4b\xc3\x30\x14\x86\xef\xfb\x2b\xce\x5d\xd3\xa9\x71\x28\xe2\x45\xf5\xc6\xb1\xb1\xc1\xc0\xb1\x09\x03\x6f\xa4\x36\xa7\xeb\x81\x2e\x19\x6d\xba\xae\xca\xfe\xbb\xe9\xa7\x1f\x6d\xc1\x8b\x91\x91\x73\xde\x27\x4f\x4e\xca\x82\x54\xfa\x9a\x94\x64\x0e\x7c\x5a\x16\xc0\xd1\x8b\x61\xb2\x58\x4f\x96\xd3\xb7\xcd\xe2\x75\x0a\x8f\x30\xe6\xf7\x77\xee\xef\xca\xcb\xf3\xaa\x2c\x8c\x4d\xc1\x54\x1a\x06\xc4\xe8\xab\xfd\x21\xd5\x38\x53\x52\x6f\xe8\x03\x4b\x2a\x40\x15\x0e\x91\x76\xa1\x36\xc1\x8c\xa4\x50\x19\x27\x29\x31\x9e\x97\x9b\x6e\xdb\x94\x91\xd0\xe1\x9f\x9e\x6d\xb1\x57\x9e\x54\xf5\xf8\x14\xfb\x11\x16\xfc\xa7\x7c\xde\x40\x6b\xfa\xe8\xa7\xfd\x37\x36\xc2\x40\xaf\x8b\x86\x95\x27\x04\xc9\x5d\x4f\xc0\x5c\xca\xed\x3d\x62\xdb\x2a\x15\xeb\x55\x87\x35\xba\xa9\xdd\x28\x00\xd6\xe3\xf6\xd0\xa5\x35\x63\x01\x10\xca\x4f\xf7\x28\x35\x7f\x57\x22\xe7\x89\xce\x23\xe4\x41\x3d\xbd\x56\x92\x6b\x35\xa3\x13\x0a\x76\xeb\xc0\x05\xd8\x87\x93\x5d\x99\x9e\x01\xa3\x04\x5b\x56\x21\xde\xc9\x9a\x0b\xb2\xee\x6d\xae\x7b\x86\xe8\xb8\xff\x73\x6a\xfe\x0e\x5a\x59\xd5\xaf\x7e\x42\x33\xa4\xe9\xd1\xd0\x96\x94\x68\x34\xaf\xc9\xec\x18\x13\x13\xb7\x2f\xbb\xdf\x4b\xa9\x30\x98\x8b\x94\x27\x06\x52\xd6\xd9\x61\x66\xf9\x0a\x00\x00\xff\xff\x65\xd3\xe1\x50\xcf\x02\x00\x00")

func assets_scripts_upload_sizing_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_upload_sizing_js,
		"assets/scripts/upload/sizing.js",
	)
}

func assets_scripts_upload_sizing_js() (*asset, error) {
	bytes, err := assets_scripts_upload_sizing_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/upload/sizing.js", size: 719, mode: os.FileMode(420), modTime: time.Unix(1440955943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_scripts_upload_uploader_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xdd\x6e\xe2\x38\x14\xbe\x9f\xa7\x38\x7b\x15\xa3\x56\xa6\xd7\xc3\x76\xa5\x15\x30\x5a\xad\x98\x01\x95\x8e\xb4\xd2\xa8\xaa\xdc\xe4\x40\x2c\x05\x27\x6b\x3b\xa5\xd5\x8a\x77\x5f\x3b\xb6\x13\x87\x04\x5a\x6e\x82\x7d\x7e\xfc\x9d\xef\xfc\xd8\x64\x57\x8b\x54\xf3\x52\x90\x09\xfc\xf7\xe5\x0b\x40\x58\xc3\xcf\xaa\x28\x59\x86\xb2\x11\x80\xf9\xe9\x9c\x2b\xfa\x9c\xe6\x65\xa9\x50\xc2\x3d\x08\x3c\xc2\x91\x8b\xac\x3c\xd2\x6f\xbc\xc0\xb9\x13\x90\xc9\x6c\xa8\x4d\x4b\x61\x55\x94\xd1\x51\x28\x8c\xad\x93\xe6\x4c\x64\x05\x36\x12\xfa\x62\x3c\x11\xbb\xdd\xd8\x9f\x2c\x94\x80\x80\x56\xb2\xd4\xa5\x7e\xaf\xb0\x67\x62\xdc\xb4\xe0\x77\x76\x63\x14\x28\x55\xa8\x97\x82\xbd\x14\x98\x91\x1d\x2b\x14\x7a\x7c\x1e\x79\xca\x65\x5a\x20\x55\x47\xae\xd3\x7c\x9b\xa2\x40\xe2\x25\x73\x27\xf9\xb9\x59\xad\xff\x5c\x3c\x6f\xe7\xcb\x1f\xcb\x71\x53\xd4\x1b\x59\xee\x25\x2a\x45\xee\x8c\x46\xa3\xf2\xca\x24\xd4\x0d\x7c\x4f\x94\x8b\xc5\xe3\x74\x6e\x9c\xdc\x50\xb3\x28\x05\xc6\xc1\x84\x38\xda\x93\x58\x81\x52\x93\xe4\x71\xbd\x58\x7f\x75\xd1\x01\x71\x66\x93\xc4\x3b\x3b\x9d\x11\x18\xb9\x5f\x4a\x59\xca\xd8\xff\x41\xed\x2f\x1d\x81\x56\xf7\x2b\x24\x70\x03\x56\x6b\xe6\x95\x2e\x32\xaa\x65\x8d\xad\xd6\x67\x29\xdd\x3c\xac\xbf\x6f\x1e\x7b\x94\x5e\x81\x1f\xc8\x8d\x23\xa8\x06\xf8\x47\x92\x51\x7d\xec\xfb\x81\x69\x5c\xf1\x03\xd7\x98\x5d\xac\xa6\x73\x8a\xa4\xb1\x81\xc2\x19\x51\x88\x72\x92\xb4\x44\x4c\xa7\x7e\x3f\x47\x89\xb7\xe0\x6a\x16\x98\x00\x56\xeb\x1c\x85\xe6\x29\x6b\x5a\xcc\xd4\xf5\xa1\xd2\x74\x04\x65\x0c\x53\x69\x66\xce\x75\x6d\x31\x1b\x69\xd1\xb1\xe2\xdf\x95\xf2\xb0\x60\x9a\xf9\xea\xfb\xe6\x97\xa1\x39\x8d\x18\x88\xad\x51\x6e\x14\xee\x6e\xa1\x68\x9a\xb2\xf1\x43\xcd\xff\xbd\xce\x67\x46\xf4\xbb\xdd\x9f\xc1\xcd\x0d\xef\xb8\xe8\xbb\xa7\xac\xaa\x50\x78\x04\xbf\xf8\x13\x15\xec\x60\x02\x0e\xcb\x90\x80\x08\xd8\x5b\x1e\x46\xc7\x3f\xdf\x57\x7f\x69\x5d\x3d\xe0\xbf\x35\x2a\xdd\x1f\x1b\xbb\xd0\xdf\xf6\xeb\xd9\x68\x24\x6d\xb3\x88\xba\x28\x66\xf1\x7e\xa8\xf2\x81\x20\xaa\x9f\x81\xac\x9f\xff\x20\x8e\x86\x4f\x34\x7a\x9a\x34\x8c\xb5\xa9\x83\x2c\x71\xcf\x95\x46\xb9\x7c\x35\x09\x56\xfd\x70\x4c\xd0\xb4\x34\x44\x91\x64\xb3\xde\x3e\x26\xb7\x90\x4c\x5d\x6e\xcd\xdf\xa8\x83\x3a\x65\x85\xbe\x14\x3a\xaa\xa3\xfc\x0f\xa0\xf9\xa9\xb8\x72\xe3\x66\x00\xd0\x26\xda\x30\x50\x17\xda\x9f\x23\xdf\xdb\x7c\xba\x7d\x63\xf5\xf7\x76\xfd\x83\x56\x4c\x2a\x24\x1d\x0e\x23\xad\x4a\xd1\xce\xcc\x13\x98\xc2\x4d\x73\x20\x78\x56\x10\x9e\x7e\x92\x70\xf1\xca\x0a\x9e\x41\x30\xec\x7a\x42\xa2\xae\xa5\x88\x0b\x82\xef\x80\xb8\xe3\x69\x33\x76\xe0\xb7\x7b\x97\x83\x0b\xce\x63\xdd\x2b\x6e\x6d\xb4\x3b\x66\x0a\x27\x0b\xb7\xc4\xaf\xa7\x6b\x55\xef\xdd\xba\xcf\x47\xe5\x6f\xad\xd1\x57\x5a\xdf\xd0\x56\x7f\x23\x09\xc8\x6c\x78\x97\xe2\x8a\xa5\xf7\x46\x1a\x0d\x15\xc0\xb7\x14\x31\xc3\x2c\x89\xd5\x21\x0e\x89\x56\xb5\xca\x49\xd4\x29\x5d\xab\xb9\x2c\xa1\xb9\xe6\x7a\xc6\x1f\xf3\x78\xce\x65\xc7\x67\xf8\x76\x49\x8b\xa1\x38\xba\xe0\x0f\xb8\x1b\x64\x2d\x6a\xae\xd8\xa4\xad\xa5\x1e\xca\xa8\xbb\x49\x34\x36\xae\x17\xfc\xd8\xd5\xd0\x96\x66\xc3\xb0\xc7\x37\x37\x73\xb6\xd6\xf6\xca\x1a\xa0\x6c\xaf\x0b\xa3\x6b\x5f\x1b\x19\x4c\x01\xa9\x39\x87\x15\x9f\xc0\xd1\xef\xfa\xcb\xd3\xc1\x36\x13\xcb\xb2\x46\x6d\x65\x2d\x84\x79\x29\x25\x61\x04\x44\x8f\x21\xdb\xc3\xd1\x4d\x30\x98\x0c\x43\x27\x4d\x1e\x83\x17\x9f\xe3\xce\x83\x99\x35\xd2\x4d\x58\x5f\x41\xc9\x67\x7c\x56\x9e\x94\x33\x70\x81\xab\x73\x80\x8e\x9d\x70\x4d\x5e\x0a\x73\x40\x8d\x37\xa8\xfd\x33\xaf\xf7\x52\x0a\x0f\xc9\x93\xbd\x0c\x4f\x13\xbb\xf8\x3f\x00\x00\xff\xff\xcb\x46\x0f\xc3\xab\x0a\x00\x00")

func assets_scripts_upload_uploader_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_upload_uploader_js,
		"assets/scripts/upload/uploader.js",
	)
}

func assets_scripts_upload_uploader_js() (*asset, error) {
	bytes, err := assets_scripts_upload_uploader_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/upload/uploader.js", size: 2731, mode: os.FileMode(420), modTime: time.Unix(1444265053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_style_auth_dialog_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x5d\x6e\xe2\x3c\x14\x7d\x67\x15\x96\xaa\xaa\x45\xaa\x69\x08\x84\x0f\x85\x5d\x7c\x3b\x70\x6c\x27\xb9\xc2\xf8\x46\xb6\x03\x4c\x47\xdd\xfb\xd8\xf9\x61\x0c\x24\x95\x46\xf0\xe2\xfb\xe7\x73\xce\x3d\xce\x8a\xb5\xae\xa6\x02\x98\xc2\x8a\xfc\x5e\x10\xd2\xa0\x05\x07\xa8\x73\x52\xc2\x55\x8a\x83\x0f\x39\x6c\x72\xc2\x99\xe2\xef\x59\xf2\x4a\x28\x59\xef\xf7\xcd\x75\x19\x32\x4a\x96\xee\x3e\xb5\x4b\x87\xd4\x05\x84\xab\x73\xb2\xf9\x6f\xd7\x5c\xc3\xb9\x96\x50\xd5\xbe\x78\x93\x6e\xfb\x40\xc1\xf8\xb1\x32\xd8\x6a\x41\x39\x2a\x34\x39\xb9\xd4\xe0\xe4\x61\xe1\x73\xf4\x22\x8b\x23\x38\xea\xb0\xe5\x35\xf5\xf3\x15\xb6\xbe\x57\xa3\x96\x87\x28\xdd\x5a\x69\xa8\x95\x4a\xf2\x38\x79\xac\xdd\x49\xcd\xe4\x4e\xf8\x35\x97\xb1\xd3\x89\x89\xe0\xf7\x62\x11\xcb\x46\x6d\x0d\x52\x09\xd0\xb3\x02\x0e\x5a\xac\x93\xe4\x35\x96\x62\x3c\x8f\x74\x82\x22\x25\xe3\x92\x9e\xc1\x42\x01\x0a\xdc\xaf\x9c\xd4\x20\x84\xd4\xa1\x4c\x80\x6d\x14\xf3\xa1\x42\x21\x3f\x4e\x4b\x68\xaa\x82\xbd\x27\x1f\x64\xf8\xaf\xb2\xe5\x33\x5c\x07\x4e\xc9\x0e\x6a\x89\xda\xd1\x92\x9d\x40\xf9\xa9\xff\x63\x81\x0e\x3f\x88\x65\xda\x7a\xc2\x06\xca\xc3\x58\x72\x19\x00\x6f\x93\xe4\x16\xb3\xf0\x25\xfd\x36\x93\x7e\x99\x4e\x5e\x1d\x65\x0a\x2a\x4f\x9b\x4b\xed\xa4\xe9\xf6\x78\x62\xa6\x02\x1f\x4a\x7d\x19\x49\xc2\x2f\x14\x37\x4c\x04\xb5\xf2\x70\x7a\x04\x17\xa8\x75\xd8\x9e\xd9\x46\xb2\x3d\x39\x08\x4e\xac\xf2\x70\x5a\xa3\xde\xdf\x56\xab\xcf\xee\x68\x3f\x43\xe7\xca\x9e\xab\xb7\xe5\x43\x79\x0f\x3e\xe8\x7f\x5b\x42\x0f\x95\x76\x5e\x5f\x67\xe1\x82\x47\x68\xa0\x9b\xd6\xcd\x60\xfb\xbb\x74\x23\x15\x73\x70\x96\xd3\xcf\x23\xe8\xb5\xbc\xd3\xc0\x5f\x45\xb2\x9e\xcf\x4d\xad\x2c\x56\x6b\x30\x4f\xba\x4b\x1e\x1e\xd2\x70\x8e\xb6\x91\x0e\x83\x0a\x34\x42\x7a\x37\x6c\xfc\x1c\x8b\x0a\x04\x79\xd9\x65\x05\x17\xdb\x19\x52\x79\x89\xbc\xb5\x1d\x35\xff\xce\x14\x68\x39\xb9\x9b\xa2\x75\x0e\xf5\x3f\x39\x67\x10\x7a\x1f\x41\xbd\x33\xd3\x84\x12\xb1\x22\x23\x91\xf1\x31\xfe\xf4\xcd\xe0\xad\xb1\x21\xd2\x20\xdc\xfc\x57\x2a\x64\xfe\x2a\x13\x6e\x0c\xfd\x43\xd3\xac\x1a\x3d\x43\xff\xc1\xd1\x5c\xaa\x9e\x68\x3f\x21\x6c\x32\x1a\x50\x28\x16\xf6\x3e\xdd\x9e\x33\x1e\x0c\xd0\xb5\x3f\x03\x7e\x29\x93\xf0\x9b\x6b\xb6\x0f\xdf\x90\x9f\xed\x94\x8c\x76\x8a\xdd\x9b\x0e\xc6\x18\x8d\xd3\x3f\x97\xef\xc5\x9f\x00\x00\x00\xff\xff\xd3\x86\xd3\x76\xeb\x05\x00\x00")

func assets_style_auth_dialog_css_bytes() ([]byte, error) {
	return bindata_read(
		_assets_style_auth_dialog_css,
		"assets/style/auth_dialog.css",
	)
}

func assets_style_auth_dialog_css() (*asset, error) {
	bytes, err := assets_style_auth_dialog_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/style/auth_dialog.css", size: 1515, mode: os.FileMode(420), modTime: time.Unix(1444442559, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_style_upload_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x52\xed\x8e\xdb\x20\x10\xfc\x9f\xa7\x40\x3a\x9d\xd4\x4a\x25\x22\xea\xf9\x2a\x39\x4f\x83\x61\x63\xaf\xb2\x66\x11\x60\xb7\x56\xd5\x77\xaf\xc1\x76\xbe\xda\xa8\xbd\x7f\xde\xd9\xf1\xcc\x30\xd0\xb0\x9d\xbe\x88\x2e\xf5\x24\x7e\xee\x84\xf8\x8e\x36\x75\xb5\x38\x28\xf5\x7a\x9c\xc7\x0e\xb0\xed\xd2\x36\xff\xda\xed\x32\xbd\x10\x7b\x1d\x5a\x74\xb5\x50\x99\xe6\xb5\xb5\xe8\xda\x75\x6a\xb4\x39\xb7\x81\x07\x67\xa5\x61\xe2\x50\x8b\x97\xf7\xaa\x31\xf6\xad\x28\xec\x4f\x48\x24\xe3\xd8\x16\x19\xcf\x11\x13\xf2\x2c\xa4\x9b\xc8\x34\x24\x38\xfe\x47\x8a\x17\x83\xc1\x10\x3c\x28\x9c\xf0\x07\xd8\xcc\x27\x38\xcd\x6c\xa3\xc9\x7c\xaa\xd4\xab\x90\x42\xed\xbf\x7e\xab\xa0\xff\x9c\x97\x89\xfd\xc3\xee\xed\xb2\x5b\x7d\xd5\x3e\x23\xb7\xce\x1b\x92\xbd\x5b\x4d\x04\x61\x92\x84\xee\xfc\x81\x04\x6a\x33\x69\x38\x25\xee\xeb\x15\xba\x77\x39\x2c\xc0\x25\xc7\x3a\x5b\x8c\x9e\xf4\x54\x8b\x86\xd8\x9c\x33\xc2\x5e\x1b\x4c\x53\xe6\xbc\x57\x7f\xe6\xaa\x3b\x1e\x21\x94\x74\x17\xe6\x61\xa1\xcd\xf5\x83\x44\xe7\x87\xf4\x2c\xbc\x67\x74\x09\x82\x84\x11\x5c\x8a\xb5\x70\xec\xca\xad\x8c\x18\xb1\x41\x2a\x62\x1d\x5a\x0b\x6e\x51\xb4\x41\xb7\x32\x76\x08\x64\x9f\x49\x96\xd2\xd5\xb5\x19\xf5\xcf\x5b\xfe\xdb\x33\x4a\x41\xbb\xe8\x75\x98\x63\xdd\xb5\xb2\x04\xcc\x51\x7c\xe0\xde\x27\x19\x0d\x38\xb8\xe9\xc0\x0c\x21\x66\x81\xf5\x64\x4f\xb9\x1b\x76\xb5\x2e\xbf\xdf\x1e\xbc\x7c\x53\xb1\xfb\x1d\x00\x00\xff\xff\x88\xd7\xa3\xf7\x3b\x03\x00\x00")

func assets_style_upload_css_bytes() ([]byte, error) {
	return bindata_read(
		_assets_style_upload_css,
		"assets/style/upload.css",
	)
}

func assets_style_upload_css() (*asset, error) {
	bytes, err := assets_style_upload_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/style/upload.css", size: 827, mode: os.FileMode(420), modTime: time.Unix(1441421802, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assets_upload_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x6d\x8f\xe2\xb6\x13\x7f\x7f\x9f\xc2\xe7\xd5\x49\xff\xbf\x84\x49\xc2\x33\xdb\xb0\x55\xab\xaa\x55\x5f\x54\x27\x55\x77\xaf\x4f\x26\x31\x89\xbb\x26\x8e\x6c\x03\xcb\x7d\xfa\x7a\x6c\xb3\x25\x90\x40\xf6\x7a\x05\xb1\xb1\x63\xcf\x6f\x66\x7e\x33\x7e\x98\x4d\xdf\xe7\x32\x33\xc7\x9a\xa1\xd2\x6c\xc5\xd3\xbb\xd4\x3f\x10\x4a\x4b\x46\x73\x68\xd8\xe6\x96\x19\x8a\xb2\x92\x2a\xcd\xcc\x0a\x7f\xfe\xf4\x2b\x59\xe0\x30\x64\xb8\x11\xec\x29\xd9\xd2\x82\x21\x82\x3e\xd7\x42\xd2\x3c\x8d\xfc\xdb\x77\x7e\x8a\xe0\xd5\x33\x2a\x15\xdb\xac\x70\x69\x4c\xfd\x18\x45\x1b\x59\x19\x3d\x2c\xa4\x2c\x04\xa3\x35\xd7\xc3\x4c\x6e\xa3\x4c\xeb\x1f\x37\x74\xcb\xc5\x71\xf5\xa7\x5c\x4b\x23\x1f\x27\x71\x3c\x18\xdb\xdf\xd4\xfe\xe6\x71\x8c\x1d\x9c\xff\x28\x26\x56\x58\x9b\xa3\x60\xba\x64\xcc\x60\x04\x2e\xac\xb0\x61\x2f\x06\x80\x4e\xd6\x39\xd5\xf7\xe6\x06\xdb\xdc\x8c\x68\xe7\x3c\x18\xfe\x2b\x0c\xba\x33\xe5\x97\x9c\x53\x21\x8b\x73\x20\xc7\x62\x45\xb7\x56\x6e\xcf\xd9\xa1\x96\xca\xe2\x64\x96\x0a\x56\x59\x56\x0f\x3c\x37\xe5\x2a\x67\x7b\x9e\x31\xe2\x3a\x03\xb4\xd3\x4c\x11\x9d\x51\x41\xd7\x82\xad\x2a\x89\x4f\x94\xea\x4c\xf1\xda\x20\xad\x32\xab\xd3\xb5\x75\x54\x5b\x18\x5a\xc8\x4a\x0f\xff\xb2\x2a\xd3\xc8\xbf\x7f\xea\x16\x38\x37\xb3\xa7\x88\x67\x27\xca\xb8\xca\x04\x7b\xa3\xd0\x86\x0b\xf6\x25\x2b\xa5\xb4\x4e\xbd\x51\x54\xf3\xaf\xbc\x7a\xab\x91\xfe\xd1\xa2\x2b\x8d\x4e\xa9\x9d\xae\x65\x7e\x0c\x48\xbc\xaa\x77\x26\x84\x15\x4c\xc5\x88\xe7\xbe\x45\xdc\x10\x46\xdb\x9d\x30\xbc\x86\xbc\x76\x02\x39\xdf\xbb\x29\x9e\x8c\x10\x64\x30\x69\x5f\xa0\x4c\x50\xad\x9d\xb4\x20\xb6\x8f\x11\x04\xfc\x67\xf9\xb2\xc2\x31\x8a\x51\x82\x92\xd7\xe9\x00\xc4\x36\xfa\xe9\x2c\xb7\x53\x45\x21\x2a\xbf\xc1\xc3\xc6\xd4\x29\x59\xd3\xec\xb9\x50\x72\x57\xe5\xa4\x08\xef\xf1\xb9\x0c\xe8\x35\xb2\x46\x72\xb3\x71\x6b\x34\xfe\x80\x11\xbc\x20\x99\x14\x52\xad\xf0\xc3\x6c\xba\xce\xf2\x49\x78\x29\x6b\x9a\x71\x73\xb4\xd3\x86\xf3\x29\x46\xd1\x2d\xa4\xe5\xec\xbb\x41\x25\x71\x5f\xb3\x2e\x80\xd2\xa8\x49\x49\x63\xcc\xf3\x8f\x32\x20\x77\x68\x4d\xc8\x8e\xa1\xa1\xc2\x13\xa2\xb0\xc2\x3b\x25\xfe\xf7\xd0\x42\xe3\xff\x71\xc3\x62\xff\x01\xca\x75\xc6\x2a\x46\xfe\x91\xb8\xb4\xe9\xb6\xde\xc9\xf2\xa4\xb8\x92\x15\x03\x07\x95\x7c\x0e\x0b\x1b\xc6\xe3\x91\x4f\xb0\xb5\x54\x36\x47\x49\x48\xa2\x0b\x15\x35\x35\x65\x40\x39\x94\xdc\x84\x9c\xf4\x89\x4d\xa8\x52\xf2\x70\x6d\xbc\x9d\xf0\x87\x35\x63\x10\x0f\xc7\x48\x90\x78\x98\x40\x33\x99\xa2\xd2\xea\x5c\xa2\x7d\x3c\x1c\xb9\x76\x32\x42\x7b\x72\xea\xd8\x81\xaf\x0d\xdd\x69\xd4\x4c\xca\xb4\x70\x9a\x6b\x25\xb7\xb5\x21\x8e\x99\x46\xfa\xa5\x76\xa7\x42\x2f\xb0\x53\x3e\xfa\x8d\xf0\xe1\x1e\x7b\x57\x02\x17\x44\x78\xbe\x5e\xfd\xbe\x23\xdc\xa0\xe4\x6d\x71\x5a\xe0\x26\xc3\x6e\xcd\x9e\x65\x75\x88\x53\x70\xfd\xcc\xa1\x96\xb4\xd9\x73\xcd\xd7\x5c\x38\xc9\x92\xe7\x39\xab\x2e\x58\x2d\xae\x28\xa5\xf6\x24\x0c\x84\xb6\x89\x7f\x67\x92\xaf\x78\x3a\x9f\xfd\x9e\x10\xf4\xe9\xe3\x2f\x1f\x1f\x2d\x07\xc5\x4e\x31\x24\xed\x86\x58\xca\x03\x32\x12\x4e\xa2\x53\x0a\xe7\x54\xdb\x9b\x80\xa2\x47\x54\x32\xc5\x7e\x40\x87\x92\x55\xe8\x77\x98\x91\x23\x6e\x06\xf6\x87\x0e\x54\xc3\xa2\x1f\x22\x42\x1a\xf6\x9c\xbb\x5c\xf3\xaa\x62\xaa\x6d\x91\xbc\x86\xa2\x65\xcd\x5c\x6c\x2f\x6e\x81\xf8\x8c\x5f\x2e\x6d\x9e\x4f\x7f\x82\x95\x37\xf0\x7f\xec\x37\xb1\xcd\xe5\x62\xec\x86\xe6\xb3\xd9\xf5\xfe\x74\x0e\x30\x9b\x59\x91\xe1\x6c\x9a\x4c\xda\x50\xc6\x33\x58\x48\xf3\xd1\x68\x72\x13\x65\xb1\x9c\x4d\x60\xde\x62\x11\xb7\xa0\x2c\x26\x6e\x14\x1e\x37\x51\x40\x7c\xe0\xc1\x5a\x50\xc0\x88\x60\xd2\x4d\x14\x70\x65\xe0\x1d\x6b\x41\x01\x42\x02\x3d\x37\x51\x26\x4b\x47\xed\x72\xd9\x82\x31\x19\x8d\xc7\x7d\x30\xc6\x93\xc5\xb4\xdb\x92\xd1\x7c\x3e\xed\xe3\xcf\x28\x49\x96\xdd\xac\x24\xd3\xf1\xb4\x0f\xb7\x49\xec\xe6\x75\x44\x28\x9e\x8d\x27\x7d\xe2\x1c\x8f\x5d\x56\x75\x64\x4b\x9c\xb8\x5c\xba\x9b\x73\xb1\x3d\x12\x07\x9e\xe2\x6e\x14\x20\xb9\x8f\x2d\x40\x72\xb7\x47\x40\x72\x1f\x5e\x80\xe4\x6e\x76\xe1\xd1\x27\x46\x00\xd6\x1d\x69\x30\xa9\x4f\xbe\x80\x63\xdd\x59\x07\xf4\xdc\x44\xb1\x75\x43\x3c\xf0\x24\x77\xe7\xff\x5d\x94\xb0\x8a\x3a\x6c\x09\x6b\xf1\xae\x47\x61\x45\x77\xf0\x12\xf6\x85\xbb\xec\x86\xdd\xa5\x23\x46\x61\x8f\xba\x1b\xe9\xb0\xd3\x75\xe4\x4b\xd8\x2f\x5b\xb2\xae\x79\x7e\xb5\x1c\x66\xe1\x78\x09\xc7\x59\xdb\x95\xe7\x7c\xb7\xff\xef\x8f\xbb\x8e\x3b\xc5\x43\x3e\x87\x6f\xeb\x6d\x2b\x9c\xf5\x85\x62\x5a\x13\x78\xd3\xe7\x54\xba\x00\x82\xaa\x10\x9d\xae\x1b\xee\x12\x61\x77\x01\xa8\x79\x89\x2d\x64\x18\xf4\xc7\xa1\x1f\xea\x5d\xac\x69\x65\x8f\x44\xa6\xf8\xe6\xfa\x5a\x01\x68\x84\x56\xb6\x72\xb2\x17\x96\xad\xe5\x49\x30\x7c\x7d\x29\xac\x99\xca\x5c\x01\xc8\x08\x08\xe0\xa7\xf8\x83\x2d\xc3\x6d\xab\x35\x62\xb6\x1c\xda\x87\x8e\xbd\xea\xf1\xfd\xa9\xae\xa4\xa1\x8e\x8d\x0a\x2a\x04\x53\x47\x8f\x1d\x3a\x04\xa8\x7d\x53\x9d\x63\x0b\x9d\x46\xa5\x53\x34\xec\x6e\xd6\x3c\x2c\xf3\x9c\x79\xc6\x30\x0a\xfc\x5a\x06\x4b\xc6\x8b\xd2\xb8\x66\xd4\x2a\x33\xfb\x06\x19\xaf\x67\xf6\x0d\x7a\x7a\xc8\x74\x31\x4d\x4f\x3c\x9f\x6a\xc7\x5c\xd1\x82\xe8\x92\x33\x91\x43\x8d\xea\x22\x01\x13\x7d\x5d\x6a\x0b\x55\xf7\xcf\x98\xbf\x03\x00\x00\xff\xff\xfd\x00\x8f\xbd\xa4\x11\x00\x00")

func assets_upload_html_bytes() ([]byte, error) {
	return bindata_read(
		_assets_upload_html,
		"assets/upload.html",
	)
}

func assets_upload_html() (*asset, error) {
	bytes, err := assets_upload_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/upload.html", size: 4516, mode: os.FileMode(420), modTime: time.Unix(1444442559, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/.DS_Store":                      assets_ds_store,
	"assets/images/lock.svg":                assets_images_lock_svg,
	"assets/scripts/.DS_Store":              assets_scripts_ds_store,
	"assets/scripts/auth_dialog.js":         assets_scripts_auth_dialog_js,
	"assets/scripts/pentagons.js":           assets_scripts_pentagons_js,
	"assets/scripts/upload/circle.js":       assets_scripts_upload_circle_js,
	"assets/scripts/upload/file_chooser.js": assets_scripts_upload_file_chooser_js,
	"assets/scripts/upload/sizing.js":       assets_scripts_upload_sizing_js,
	"assets/scripts/upload/uploader.js":     assets_scripts_upload_uploader_js,
	"assets/style/auth_dialog.css":          assets_style_auth_dialog_css,
	"assets/style/upload.css":               assets_style_upload_css,
	"assets/upload.html":                    assets_upload_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"assets": &_bintree_t{nil, map[string]*_bintree_t{
		".DS_Store": &_bintree_t{assets_ds_store, map[string]*_bintree_t{}},
		"images": &_bintree_t{nil, map[string]*_bintree_t{
			"lock.svg": &_bintree_t{assets_images_lock_svg, map[string]*_bintree_t{}},
		}},
		"scripts": &_bintree_t{nil, map[string]*_bintree_t{
			".DS_Store":      &_bintree_t{assets_scripts_ds_store, map[string]*_bintree_t{}},
			"auth_dialog.js": &_bintree_t{assets_scripts_auth_dialog_js, map[string]*_bintree_t{}},
			"pentagons.js":   &_bintree_t{assets_scripts_pentagons_js, map[string]*_bintree_t{}},
			"upload": &_bintree_t{nil, map[string]*_bintree_t{
				"circle.js":       &_bintree_t{assets_scripts_upload_circle_js, map[string]*_bintree_t{}},
				"file_chooser.js": &_bintree_t{assets_scripts_upload_file_chooser_js, map[string]*_bintree_t{}},
				"sizing.js":       &_bintree_t{assets_scripts_upload_sizing_js, map[string]*_bintree_t{}},
				"uploader.js":     &_bintree_t{assets_scripts_upload_uploader_js, map[string]*_bintree_t{}},
			}},
		}},
		"style": &_bintree_t{nil, map[string]*_bintree_t{
			"auth_dialog.css": &_bintree_t{assets_style_auth_dialog_css, map[string]*_bintree_t{}},
			"upload.css":      &_bintree_t{assets_style_upload_css, map[string]*_bintree_t{}},
		}},
		"upload.html": &_bintree_t{assets_upload_html, map[string]*_bintree_t{}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
